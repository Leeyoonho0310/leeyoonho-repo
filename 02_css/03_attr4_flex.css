.main-container {
  /* flex 기본 용어 */
  /* 주축: main axis */
  /* 교차축: cross axis */

  /* display: flex;는 자식 요소의 정렬 방법을 지정하는 속성 */
  /* display: inline-flex; 속성도 있음 */
  /* flex와 inline-flex의 차이는  */
  /* flex는 부모 요소가 수직으로 쌓임 block 요소처럼 */
  /* inline-flex는 부모 요소가 수평으로 쌓임 inline 요소처럼 */

  /* display: flex;는 기본적으로 자식 요소들이 왼쪽에서 오른쪽으로 쌓임 */
  /* 즉, 주측이 기본 방향이 좌 -> 우 */
  display: flex;
  width: 100vw;
  background-color: antiquewhite;

  /* flex-direction: 주축의 방향 지정 */
  /* flex-direction: row; (default) */
  /* row-reverse: 우 -> 좌로 자식 요소들이 쌓임 */
  /* flex-direction: row-reverse; */
  /* column: 위 -> 아래로 자식 요소들이 쌓임 */
  /* flex-direction: column; */
  /* column-reverse: 아래 -> 위로 자식 요소들이 쌓임 */
  /* flex-direction: column-reverse; */

  /* width: 350px; */
  /* flex 속성 사용 시 컨테이너의 너비와 높이(width, height)를 유지한채 줄바꿈을 지정 */
  /* flex-wrap: nowrap; (default) */
  /* flex-wrap: wrap;
  flex-wrap: wrap-reverse; */

  /* justify-content: 주축 item의 정렬 방법 / 배치 방법 */
  /*   
    -justify-content: flex-start(default) -> 아이템을 start 지점을 기준으로 나열
    -justify-content: flex-end -> 아이템을 end 지점을 기준으로 나열
    -justify-content: space-around -> 아이템들의 모든 여백을 동일하게 갖도록 함 
    (양끝 여백의 단위가 1이라면, 아이템 사이의 여백들은 2가 됨)
    - justify-content: space-evenly -> start부터 첫 아이템의 간격, 아이템 사이 간격, 마지막 아이템부터 end까지의 모든 간격이 동일
    - justify-content: space-between -> 처음과 마지막 아이템을 양 끝에 붙이고, 나머지 아이템 사이 간격을 동일하게 나눔
    */
  /* justify-content: flex-end; */
  /* justify-content: space-around; */
  /* justify-content: space-evenly; */
  /* justify-content: space-between; */
  height: 300px;

  /* align-items -> 교차축에 대해 item을 어떻게 배치할 것인가 */
  /* 
    - align-items: stretch; (default) -> container의 교차축을 모두 채우기 위해 늘림
      -> 아이템의 높이가 지정되지 않았을때 자동으로 교차축을 채우기 위해 늘어남
    - align-items: flex-start; -> 교차축의 시작점으로 정렬
      -> 아이템의 높이/너비가 지정되었을때 자동으로 정렬됨
    - align-items: flex-end; -> 교차축의 끝점으로 정렬
    - align-items: center; -> 교차축의 중앙으로 정렬
    - align-items: baseline; -> 아이템을 텍스트의 베이스라인 기준으로 정렬 
  */

  /* align-content -> 두 줄 이상에서 교차축 기준으로 아이템들의 정렬 방식 */
  /* 조건: flex-wrap: wrap 상태에서 아이템이 두 줄 이상일때 교차축 방향 설정 */
  /* 
  - align-content: stretch; -> 교차축 방향으로 모두 차지하기 위해 늘어남
  - align-content: flex-start; -> 교차축 방향으로 시작점으로 정렬 
  - align-content: flex-end; -> 교차축 방향으로 끝점으로 정렬
  - align-content: center; -> 교차축 방향으로 중앙으로 정렬
  */
  width: 350px;
  flex-wrap: wrap;
  align-content: center;
}

.item {
  width: 100px;
  height: 100px;
  font-size: 30px;
  text-align: center;
  line-height: 100px;
}

.item1 {
  background-color: red;
  /* font-size: 20px; */
}
.item2 {
  background-color: orange;
}
.item3 {
  background-color: yellow;
}
.item4 {
  background-color: green;
}
.item5 {
  background-color: blue;
}

.main {
  width: 500px;
  height: 500px;
  display: flex;
  flex-wrap: wrap;
  flex-direction: column;
  background-color: pink;
  align-items: center;
}

.con {
  width: 100px;
  height: 100px;
  font-size: 30px;
  text-align: center;
  line-height: 100px;
}

.con1 {
  background-color: blue;
}
.con2 {
  background-color: red;
}
.con3 {
  background-color: aqua;
}
.con4 {
  background-color: coral;
}
.con5 {
  background-color: cornflowerblue;
}
.con6 {
  background-color: bisque;
}
.con7 {
  background-color: pink;
}
.con8 {
  background-color: orchid;
}

/* 아이템 속성 */
.container2 {
  background-color: #dfdfdf;
  width: 100%;
  height: 200px;
  display: flex;
}

.item {
  line-height: 50px;
  text-align: center;
}
.item1 {
  width: 50px;
  height: 50px;
  background-color: lightcoral;
  order: 5;
}
.item2 {
  width: 50px;
  height: 50px;
  background-color: lightsalmon;
  align-self: flex-end;
  order: 4;
}
.item3 {
  width: 50px;
  height: 50px;
  background-color: lightblue;
  flex-basis: 100px;
  order: 3;
}
.item4 {
  width: 50px;
  height: 50px;
  background-color: lightcyan;
  flex-grow: 1;
  order: 2;
}
.item5 {
  width: 50px;
  height: 50px;
  background-color: lightyellow;
  flex-grow: 2;
  order: 1;
}
